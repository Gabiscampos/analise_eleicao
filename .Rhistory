mutate(media6=votos_colig/(cadeiras_round5+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round6=(ifelse(media6==max(media6),1,0)+cadeiras_round5)) %>%
mutate(media7=votos_colig/(cadeiras_round6+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round7=(ifelse(media7==max(media7),1,0)+cadeiras_round6)) %>%
mutate(media8=votos_colig/(cadeiras_round7+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round8=(ifelse(media8==max(media8),1,0)+cadeiras_round7)) %>%
mutate(media9=votos_colig/(cadeiras_round8+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round9=(ifelse(media9==max(media9),1,0)+cadeiras_round8)) %>%
mutate(media10=votos_colig/(cadeiras_round9+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round10=(ifelse(media10==max(media10),1,0)+cadeiras_round9)) %>%
mutate(media11=votos_colig/(cadeiras_round10+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round11=(ifelse(media11==max(media11),1,0)+cadeiras_round10))
sp_cn<-total_coligacao_comnaninos %>% filter(UF=="SP")
write.csv(sp_cn, "sp_cn.csv")
write.csv(sp_sn, "sp_sn.csv")
total_coligacao_exnanicos<- total_coligacao %>% filter(cadeiras_colig>0)
total_coligacao_exnanicos<-total_coligacao_exnanicos %>% arrange(UF, cadeiras_colig) %>%
group_by(UF, coligacao) %>%
mutate(media1=votos_colig/(cadeiras_colig+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round1=(ifelse(media1==max(media1),1,0)+cadeiras_colig)) %>%
mutate(media2=votos_colig/(cadeiras_round1+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round2=(ifelse(media2==max(media2),1,0)+cadeiras_round1)) %>%
mutate(media3=votos_colig/(cadeiras_round2+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round3=(ifelse(media3==max(media3),1,0)+cadeiras_round2)) %>%
mutate(media4=votos_colig/(cadeiras_round3+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round4=(ifelse(media4==max(media4),1,0)+cadeiras_round3)) %>%
mutate(media5=votos_colig/(cadeiras_round4+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round5=(ifelse(media5==max(media5),1,0)+cadeiras_round4)) %>%
mutate(media6=votos_colig/(cadeiras_round5+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round6=(ifelse(media6==max(media6),1,0)+cadeiras_round5)) %>%
mutate(media7=votos_colig/(cadeiras_round6+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round7=(ifelse(media7==max(media7),1,0)+cadeiras_round6)) %>%
mutate(media8=votos_colig/(cadeiras_round7+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round8=(ifelse(media8==max(media8),1,0)+cadeiras_round7)) %>%
mutate(media9=votos_colig/(cadeiras_round8+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round9=(ifelse(media9==max(media9),1,0)+cadeiras_round8)) %>%
mutate(media10=votos_colig/(cadeiras_round9+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round10=(ifelse(media10==max(media10),1,0)+cadeiras_round9)) %>%
mutate(media11=votos_colig/(cadeiras_round10+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round11=(ifelse(media11==max(media11),1,0)+cadeiras_round10))
sp_sn<-total_coligacao_exnanicos %>% filter(UF=="SP")
#agora mesmo calculo com nanicos (sem atingir QE)
total_coligacao_comnaninos<-total_coligacao %>% arrange(UF, cadeiras_colig) %>%
group_by(UF, coligacao) %>%
mutate(media1=votos_colig/(cadeiras_colig+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round1=(ifelse(media1==max(media1),1,0)+cadeiras_colig)) %>%
mutate(media2=votos_colig/(cadeiras_round1+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round2=(ifelse(media2==max(media2),1,0)+cadeiras_round1)) %>%
mutate(media3=votos_colig/(cadeiras_round2+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round3=(ifelse(media3==max(media3),1,0)+cadeiras_round2)) %>%
mutate(media4=votos_colig/(cadeiras_round3+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round4=(ifelse(media4==max(media4),1,0)+cadeiras_round3)) %>%
mutate(media5=votos_colig/(cadeiras_round4+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round5=(ifelse(media5==max(media5),1,0)+cadeiras_round4)) %>%
mutate(media6=votos_colig/(cadeiras_round5+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round6=(ifelse(media6==max(media6),1,0)+cadeiras_round5)) %>%
mutate(media7=votos_colig/(cadeiras_round6+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round7=(ifelse(media7==max(media7),1,0)+cadeiras_round6)) %>%
mutate(media8=votos_colig/(cadeiras_round7+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round8=(ifelse(media8==max(media8),1,0)+cadeiras_round7)) %>%
mutate(media9=votos_colig/(cadeiras_round8+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round9=(ifelse(media9==max(media9),1,0)+cadeiras_round8)) %>%
mutate(media10=votos_colig/(cadeiras_round9+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round10=(ifelse(media10==max(media10),1,0)+cadeiras_round9)) %>%
mutate(media11=votos_colig/(cadeiras_round10+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round11=(ifelse(media11==max(media11),1,0)+cadeiras_round10))
sp_cn<-total_coligacao_comnaninos %>% filter(UF=="SP")
write.csv(sp_cn, "sp_cn.csv")
write.csv(sp_sn, "sp_sn.csv")
write.csv(sp_sn, "sp_sn.csv")
View(total_coligacao_comnaninos)
total_coligacao_exnanicos_v2<- total_coligacao_exnanicos %>% group_by(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_colig, cadeiras_round1))
View(total_coligacao_exnanicos_v2)
#agora vamos limitar o número de rodadas por estado
total_coligacao_exnanicos_v2<- total_coligacao_exnanicos %>% group_by(UF) %>% arrange(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_colig, cadeiras_round1))
View(total_coligacao_exnanicos_v2)
#agora vamos limitar o número de rodadas por estado
total_coligacao_exnanicos_v2<- total_coligacao_exnanicos %>% group_by(UF) %>% arrange(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_round1, cadeiras_round2)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_round2, cadeiras_round3)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_round3, cadeiras_round4)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_round4, cadeiras_round5))
View(total_coligacao_exnanicos_v2)
View(total_coligacao_exnanicos_v2)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
View(tabela_parte)
View(total_coligacao_exnanicos)
View(total_coligacao_comnaninos)
View(total_coligacao)
View(total_coligacao_comnaninos)
banco_eleitos_exnanicos<-left_join(banco, total_coligacao_exnanicos, by = c("UF", "coligacao"))
View(banco_eleitos_exnanicos)
View(total_coligacao)
total_coligacao <- read_excel("~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Votacao_partidos(4).xlsx")
total_coligacao<- total_coligacao %>% rename(coligacao=Coligacao,
UF = Estado,
quantidade=Total)
View(total_coligacao)
View(banco)
total_coligacao <- read_excel("~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Votacao_partidos(4).xlsx")
total_coligacao<- total_coligacao %>% rename(coligacao=Coligacao,
UF = Estado,
quantidade=Total,
partido = Sigla)
partido_colig<-total_coligacao %>% select(UF, coligacao, partido)
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") )
View(banco_eleitos_exnanicos)
View(banco)
banco <- banco %>% rename(NR_CANDIDATO = numero,
SG_UF = UF) %>% mutate(UF=str_to_upper(SG_UF))
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
View(banco_eleitos_exnanicos)
View(banco_eleitos_exnanicos)
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos, total_coligacao_exnanicos, by = c("UF", "coligacao"))
View(banco_eleitos_exnanicos)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos, total_coligacao_exnanicos, by = c("UF", "coligacao")) %>%
select(-13:17)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos, total_coligacao_exnanicos, by = c("UF", "coligacao")) %>%
select(1:12,18)
View(banco_eleitos_exnanicos)
?dense_rank
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(quantidade))
View(banco_eleitos_exnanicos)
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(quantidade,-1))
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade)))
View(banco_eleitos_exnanicos)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% mutate(eleito_regra_antiga=ifelse(ranking<=quantidade,"S","N"))
View(banco_eleitos_exnanicos)
#Próximo juntamos o banco de candidatos com o calculo com nanicos
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_comnanicos<-left_join(banco_eleitos_comnanicos, total_coligacao_comnaninos, by = c("UF", "coligacao")) %>%
select(1:12,18)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% mutate(eleito_regra_antiga=ifelse(ranking<=quantidade,"S","N"))
View(banco_eleitos_comnanicos)
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=quantidade,"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_comnanicos<-left_join(banco_eleitos_comnanicos, total_coligacao_comnaninos, by = c("UF", "coligacao")) %>%
select(1:12,18)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=quantidade,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking>=quantidade,"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_comnanicos<-left_join(banco_eleitos_comnanicos, total_coligacao_comnaninos, by = c("UF", "coligacao")) %>%
select(1:12,18)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking>=quantidade,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
AC<-banco_eleitos_exnanicos %>% filter(UF=="AC")
View(AC)
View(AC)
View(AC)
rm(AC)
View(banco_eleitos_comnanicos)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(posicao = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse((posicao<=cadeiras_round11),"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_comnanicos<-left_join(banco_eleitos_comnanicos, total_coligacao_comnaninos, by = c("UF", "coligacao")) %>%
select(1:12,18)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
banco_eleitos_exnanicos_1<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos_1, total_coligacao_exnanicos, by = c("UF", "coligacao")) %>%
select(1:12,18) %>% distinct()
View(banco_eleitos_exnanicos)
View(banco_eleitos_exnanicos_1)
banco_eleitos_exnanicos_1<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
% rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos_1, total_coligacao_exnanicos, by = c("UF", "coligacao")) %>%
select(1:12,18) %>% distinct()
View(banco_eleitos_exnanicos)
View(banco_eleitos_exnanicos_1)
banco_eleitos_exnanicos_1<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
rename(coligacao=coligacao.y)
banco_eleitos_exnanicos<-left_join(banco_eleitos_exnanicos_1, total_coligacao_exnanicos, by = c("UF", "coligacao")) %>%
select(1:12,18) %>% distinct()
View(banco_eleitos_exnanicos_1)
View(total_coligacao_comnaninos)
View(partido_colig)
partido_colig<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "coligacao"))
View(partido_colig)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
partido_colig<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "coligacao"))
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(posicao = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse((posicao<=cadeiras_round11),"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
partido_colig<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "coligacao"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
View(banco_eleitos_comnanicos)
View(banco)
partido_colig<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "coligacao"))
View(partido_colig)
partido_colig<-total_coligacao %>% select(UF, coligacao, partido)
total_coligacao <- read_excel("~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Votacao_partidos(4).xlsx")
total_coligacao<- total_coligacao %>% rename(coligacao=Coligacao,
UF = Estado,
quantidade=Total,
partido = Sigla)
partido_colig<-total_coligacao %>% select(UF, coligacao, partido)
View(partido_colig)
partido_colig<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "coligacao"))
banco_eleitos_exnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
View(banco_eleitos_exnanicos)
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, coligacao) %>%
mutate(posicao = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse((posicao<=cadeiras_round11),"S","N"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
View(partido_colig)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
View(partido_colig_1)
View(banco_eleitos_comnanicos)
View(banco_eleitos_exnanicos)
View(partido_colig_2)
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, coligacao) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos.csv")
write.csv(total_coligacao_comnaninos, "total_coligacao_comnanicos.csv")
write.csv(total_coligacao_exnanicos, "total_coligacao_exnanicos.csv")
View(sobras)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/Contrafacto.R', encoding = 'UTF-8', echo=TRUE)
source('~/07. Mestrado FGV/00. CEPESP/08. Valor/Analises_eleicao/contrafacto_semcoligacao.R', encoding = 'UTF-8', echo=TRUE)
View(total_coligacao_comnaninos)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
#Juntamos o banco de candidatos com o calculo sem nanicos
partido_colig_1<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "partido"))
banco_eleitos_exnanicos<-left_join(banco, partido_colig_1, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, partido) %>%
mutate(posicao = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse((posicao<=cadeiras_round11),"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
partido_colig_2<-left_join(partido_colig, total_coligacao_comnaninos, by = c("UF", "partido"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, partido) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos_p.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos_.csv")
View(sobras)
total_coligacao_comnaninos<-total_coligacao %>% arrange(UF, cadeiras_colig) %>%
group_by(UF, partido) %>%
mutate(media1=votos_colig/(cadeiras_colig+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round1=(ifelse(media1==max(media1),1,0)+cadeiras_colig)) %>%
mutate(media2=votos_colig/(cadeiras_round1+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round2=(ifelse(media2==max(media2),1,0)+cadeiras_round1)) %>%
mutate(media3=votos_colig/(cadeiras_round2+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round3=(ifelse(media3==max(media3),1,0)+cadeiras_round2)) %>%
mutate(media4=votos_colig/(cadeiras_round3+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round4=(ifelse(media4==max(media4),1,0)+cadeiras_round3)) %>%
mutate(media5=votos_colig/(cadeiras_round4+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round5=(ifelse(media5==max(media5),1,0)+cadeiras_round4)) %>%
mutate(media6=votos_colig/(cadeiras_round5+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round6=(ifelse(media6==max(media6),1,0)+cadeiras_round5)) %>%
mutate(media7=votos_colig/(cadeiras_round6+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round7=(ifelse(media7==max(media7),1,0)+cadeiras_round6)) %>%
mutate(media8=votos_colig/(cadeiras_round7+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round8=(ifelse(media8==max(media8),1,0)+cadeiras_round7)) %>%
mutate(media9=votos_colig/(cadeiras_round8+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round9=(ifelse(media9==max(media9),1,0)+cadeiras_round8)) %>%
mutate(media10=votos_colig/(cadeiras_round9+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round10=(ifelse(media10==max(media10),1,0)+cadeiras_round9)) %>%
mutate(media11=votos_colig/(cadeiras_round10+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round11=(ifelse(media11==max(media11),1,0)+cadeiras_round10)) %>%
mutate(media12=votos_colig/(cadeiras_round11+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round12=(ifelse(media12==max(media12),1,0)+cadeiras_round11)) %>%
mutate(media13=votos_colig/(cadeiras_round12+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round13=(ifelse(media13==max(media13),1,0)+cadeiras_round12)) %>%
mutate(media14=votos_colig/(cadeiras_round13+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round14=(ifelse(media14==max(media14),1,0)+cadeiras_round13)) %>%
mutate(media15=votos_colig/(cadeiras_round14+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round15=(ifelse(media15==max(media15),1,0)+cadeiras_round14))
sp_cn<-total_coligacao_comnaninos %>% filter(UF=="SP")
total_coligacao_comnaninos<- total_coligacao_comnaninos %>% group_by(UF) %>% arrange(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_round1, cadeiras_round2)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_round2, cadeiras_round3)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_round3, cadeiras_round4)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_round4, cadeiras_round5)) %>%
mutate(cadeiras_round6=ifelse(sum(cadeiras_round6)>eleitos_UF, cadeiras_round5, cadeiras_round6)) %>%
mutate(cadeiras_round7=ifelse(sum(cadeiras_round7)>eleitos_UF, cadeiras_round6, cadeiras_round7)) %>%
mutate(cadeiras_round8=ifelse(sum(cadeiras_round8)>eleitos_UF, cadeiras_round7, cadeiras_round8)) %>%
mutate(cadeiras_round9=ifelse(sum(cadeiras_round9)>eleitos_UF, cadeiras_round8, cadeiras_round9)) %>%
mutate(cadeiras_round10=ifelse(sum(cadeiras_round10)>eleitos_UF, cadeiras_round9, cadeiras_round10)) %>%
mutate(cadeiras_round11=ifelse(sum(cadeiras_round11)>eleitos_UF, cadeiras_round10, cadeiras_round11)) %>%
mutate(cadeiras_round12=ifelse(sum(cadeiras_round12)>eleitos_UF, cadeiras_round11, cadeiras_round12)) %>%
mutate(cadeiras_round13=ifelse(sum(cadeiras_round13)>eleitos_UF, cadeiras_round12, cadeiras_round13)) %>%
mutate(cadeiras_round14=ifelse(sum(cadeiras_round14)>eleitos_UF, cadeiras_round13, cadeiras_round14)) %>%
mutate(cadeiras_round15=ifelse(sum(cadeiras_round15)>eleitos_UF, cadeiras_round14, cadeiras_round15))
#Agora vamos usar só a visão final
total_coligacao_exnanicos<-total_coligacao_exnanicos %>% select(1:7, 29)
total_coligacao_comnaninos<-total_coligacao_comnaninos %>% select(1:7, 29)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
#Juntamos o banco de candidatos com o calculo sem nanicos
partido_colig_1<-left_join(partido_colig, total_coligacao_exnanicos, by = c("UF", "partido"))
banco_eleitos_exnanicos<-left_join(banco, partido_colig_1, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_exnanicos<-banco_eleitos_exnanicos %>% group_by(UF, partido) %>%
mutate(posicao = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse((posicao<=cadeiras_round11),"S","N"))
#Próximo juntamos o banco de candidatos com o calculo com nanicos
partido_colig_2<-left_join(partido_colig, total_coligacao_comnaninos, by = c("UF", "partido"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, partido) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round11,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos_p.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos_p.csv")
pt<-total_coligacao %>% filter(UF="AP") %>% filter(partido="PT")
pt<-total_coligacao %>% filter(UF=="AP") %>% filter(partido=="PT")
#Baixar banco
sp_cn<-total_coligacao_comnaninos %>% filter(UF=="SP")
View(sp_cn)
partido_colig_2<-left_join(partido_colig, total_coligacao_comnaninos, by = c("UF", "partido"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, partido) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round15,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos_p.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos_p.csv")
total_coligacao_comnaninos<- total_coligacao_comnaninos %>% group_by(UF) %>% arrange(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_round1, cadeiras_round2)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_round2, cadeiras_round3)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_round3, cadeiras_round4)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_round4, cadeiras_round5)) %>%
mutate(cadeiras_round6=ifelse(sum(cadeiras_round6)>eleitos_UF, cadeiras_round5, cadeiras_round6)) %>%
mutate(cadeiras_round7=ifelse(sum(cadeiras_round7)>eleitos_UF, cadeiras_round6, cadeiras_round7)) %>%
mutate(cadeiras_round8=ifelse(sum(cadeiras_round8)>eleitos_UF, cadeiras_round7, cadeiras_round8)) %>%
mutate(cadeiras_round9=ifelse(sum(cadeiras_round9)>eleitos_UF, cadeiras_round8, cadeiras_round9)) %>%
mutate(cadeiras_round10=ifelse(sum(cadeiras_round10)>eleitos_UF, cadeiras_round9, cadeiras_round10)) %>%
mutate(cadeiras_round11=ifelse(sum(cadeiras_round11)>eleitos_UF, cadeiras_round10, cadeiras_round11)) %>%
mutate(cadeiras_round12=ifelse(sum(cadeiras_round12)>eleitos_UF, cadeiras_round11, cadeiras_round12)) %>%
mutate(cadeiras_round13=ifelse(sum(cadeiras_round13)>eleitos_UF, cadeiras_round12, cadeiras_round13)) %>%
mutate(cadeiras_round14=ifelse(sum(cadeiras_round14)>eleitos_UF, cadeiras_round13, cadeiras_round14)) %>%
mutate(cadeiras_round15=ifelse(sum(cadeiras_round15)>eleitos_UF, cadeiras_round14, cadeiras_round15))
#Agora vamos usar só a visão final
total_coligacao_exnanicos<-total_coligacao_exnanicos %>% select(1:7, 29)
total_coligacao_comnaninos<-total_coligacao_comnaninos %>% select(1:7, 29)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
#Próximo juntamos o banco de candidatos com o calculo com nanicos
partido_colig_2<-left_join(partido_colig, total_coligacao_comnaninos, by = c("UF", "partido"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, partido) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round15,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos_p.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos_p.csv")
#agora mesmo calculo com nanicos (sem atingir QE)
total_coligacao_comnaninos<-total_coligacao %>% arrange(UF, cadeiras_colig) %>%
group_by(UF, partido) %>%
mutate(media1=votos_colig/(cadeiras_colig+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round1=(ifelse(media1==max(media1),1,0)+cadeiras_colig)) %>%
mutate(media2=votos_colig/(cadeiras_round1+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round2=(ifelse(media2==max(media2),1,0)+cadeiras_round1)) %>%
mutate(media3=votos_colig/(cadeiras_round2+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round3=(ifelse(media3==max(media3),1,0)+cadeiras_round2)) %>%
mutate(media4=votos_colig/(cadeiras_round3+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round4=(ifelse(media4==max(media4),1,0)+cadeiras_round3)) %>%
mutate(media5=votos_colig/(cadeiras_round4+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round5=(ifelse(media5==max(media5),1,0)+cadeiras_round4)) %>%
mutate(media6=votos_colig/(cadeiras_round5+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round6=(ifelse(media6==max(media6),1,0)+cadeiras_round5)) %>%
mutate(media7=votos_colig/(cadeiras_round6+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round7=(ifelse(media7==max(media7),1,0)+cadeiras_round6)) %>%
mutate(media8=votos_colig/(cadeiras_round7+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round8=(ifelse(media8==max(media8),1,0)+cadeiras_round7)) %>%
mutate(media9=votos_colig/(cadeiras_round8+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round9=(ifelse(media9==max(media9),1,0)+cadeiras_round8)) %>%
mutate(media10=votos_colig/(cadeiras_round9+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round10=(ifelse(media10==max(media10),1,0)+cadeiras_round9)) %>%
mutate(media11=votos_colig/(cadeiras_round10+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round11=(ifelse(media11==max(media11),1,0)+cadeiras_round10)) %>%
mutate(media12=votos_colig/(cadeiras_round11+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round12=(ifelse(media12==max(media12),1,0)+cadeiras_round11)) %>%
mutate(media13=votos_colig/(cadeiras_round12+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round13=(ifelse(media13==max(media13),1,0)+cadeiras_round12)) %>%
mutate(media14=votos_colig/(cadeiras_round13+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round14=(ifelse(media14==max(media14),1,0)+cadeiras_round13)) %>%
mutate(media15=votos_colig/(cadeiras_round14+1)) %>% ungroup() %>%  group_by(UF) %>%
mutate(cadeiras_round15=(ifelse(media15==max(media15),1,0)+cadeiras_round14))
#agora vamos limitar o número de rodadas por estado
total_coligacao_comnaninos<- total_coligacao_comnaninos %>% group_by(UF) %>% arrange(UF) %>%
mutate(cadeiras_round1=ifelse(sum(cadeiras_round1)>eleitos_UF, cadeiras_colig, cadeiras_round1)) %>%
mutate(cadeiras_round2=ifelse(sum(cadeiras_round2)>eleitos_UF, cadeiras_round1, cadeiras_round2)) %>%
mutate(cadeiras_round3=ifelse(sum(cadeiras_round3)>eleitos_UF, cadeiras_round2, cadeiras_round3)) %>%
mutate(cadeiras_round4=ifelse(sum(cadeiras_round4)>eleitos_UF, cadeiras_round3, cadeiras_round4)) %>%
mutate(cadeiras_round5=ifelse(sum(cadeiras_round5)>eleitos_UF, cadeiras_round4, cadeiras_round5)) %>%
mutate(cadeiras_round6=ifelse(sum(cadeiras_round6)>eleitos_UF, cadeiras_round5, cadeiras_round6)) %>%
mutate(cadeiras_round7=ifelse(sum(cadeiras_round7)>eleitos_UF, cadeiras_round6, cadeiras_round7)) %>%
mutate(cadeiras_round8=ifelse(sum(cadeiras_round8)>eleitos_UF, cadeiras_round7, cadeiras_round8)) %>%
mutate(cadeiras_round9=ifelse(sum(cadeiras_round9)>eleitos_UF, cadeiras_round8, cadeiras_round9)) %>%
mutate(cadeiras_round10=ifelse(sum(cadeiras_round10)>eleitos_UF, cadeiras_round9, cadeiras_round10)) %>%
mutate(cadeiras_round11=ifelse(sum(cadeiras_round11)>eleitos_UF, cadeiras_round10, cadeiras_round11)) %>%
mutate(cadeiras_round12=ifelse(sum(cadeiras_round12)>eleitos_UF, cadeiras_round11, cadeiras_round12)) %>%
mutate(cadeiras_round13=ifelse(sum(cadeiras_round13)>eleitos_UF, cadeiras_round12, cadeiras_round13)) %>%
mutate(cadeiras_round14=ifelse(sum(cadeiras_round14)>eleitos_UF, cadeiras_round13, cadeiras_round14)) %>%
mutate(cadeiras_round15=ifelse(sum(cadeiras_round15)>eleitos_UF, cadeiras_round14, cadeiras_round15))
#Agora vamos usar só a visão final
total_coligacao_exnanicos<-total_coligacao_exnanicos %>% select(1:7, 37)
total_coligacao_comnaninos<-total_coligacao_comnaninos %>% select(1:7, 37)
#Proximo passo é marcar no banco de candidato quem seria eleito -----------------------------------
#Próximo juntamos o banco de candidatos com o calculo com nanicos
partido_colig_2<-left_join(partido_colig, total_coligacao_comnaninos, by = c("UF", "partido"))
banco_eleitos_comnanicos<-left_join(banco, partido_colig_2, by = c("UF", "partido") ) %>%
select(-coligacao.x) %>% rename(coligacao=coligacao.y)
#Rankeamos os candidatos da coligação e quem atinge o ranking é considerado eleito
banco_eleitos_comnanicos<-banco_eleitos_comnanicos %>% group_by(UF, partido) %>%
mutate(ranking = dense_rank(desc(quantidade))) %>% ungroup() %>%
mutate(eleito_regra_antiga=ifelse(ranking<=cadeiras_round15,"S","N"))
write.csv(banco_eleitos_exnanicos, "banco_eleitos_exnanicos_p.csv")
write.csv(banco_eleitos_comnanicos, "banco_eleitos_comnanicos_p.csv")
